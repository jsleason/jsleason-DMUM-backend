/// <reference types="node" />
import { ServerRequest, ServerResponse } from 'http';
import { AddressInfo } from 'net';
export declare type HttpRequestListener = (req: ServerRequest, res: ServerResponse) => void;
/**
 * Object for specifyig the HTTP / HTTPS server options
 */
export declare type HttpServerOptions = {
    port?: number;
    host?: string;
    protocol?: HttpProtocol;
};
export declare type HttpProtocol = 'http' | 'https';
/**
 * HTTP / HTTPS server used by LoopBack's RestServer
 *
 * @export
 * @class HttpServer
 */
export declare class HttpServer {
    private _port;
    private _host?;
    private _listening;
    private _protocol;
    private _address;
    private httpRequestListener;
    private httpServer;
    /**
     * @param httpServerOptions
     * @param httpRequestListener
     */
    constructor(httpRequestListener: HttpRequestListener, httpServerOptions?: HttpServerOptions);
    /**
     * Starts the HTTP / HTTPS server
     */
    start(): Promise<void>;
    /**
     * Stops the HTTP / HTTPS server
     */
    stop(): Promise<void>;
    /**
     * Protocol of the HTTP / HTTPS server
     */
    readonly protocol: HttpProtocol;
    /**
     * Port number of the HTTP / HTTPS server
     */
    readonly port: number;
    /**
     * Host of the HTTP / HTTPS server
     */
    readonly host: string | undefined;
    /**
     * URL of the HTTP / HTTPS server
     */
    readonly url: string;
    /**
     * State of the HTTP / HTTPS server
     */
    readonly listening: boolean;
    /**
     * Address of the HTTP / HTTPS server
     */
    readonly address: AddressInfo | undefined;
}
